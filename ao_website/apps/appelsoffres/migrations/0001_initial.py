# Generated by Django 4.2.10 on 2025-10-21 09:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Acheteur",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("denomination_sociale", models.CharField(max_length=255, null=True)),
                ("email", models.CharField(max_length=255, null=True)),
                ("telephone", models.CharField(max_length=255, null=True)),
                ("adresse", models.CharField(max_length=255, null=True)),
                ("url_profil", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "acheteur",
            },
        ),
        migrations.CreateModel(
            name="CodeCPV",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=255, unique=True)),
                ("nom", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "code_cpv",
            },
        ),
        migrations.CreateModel(
            name="Competence",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "competence",
            },
        ),
        migrations.CreateModel(
            name="Departement",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=255, unique=True)),
                ("nom", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "departement",
            },
        ),
        migrations.CreateModel(
            name="Piece",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "piece",
            },
        ),
        migrations.CreateModel(
            name="Procedure",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "procedure_marche",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=255, unique=True)),
                ("nom", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "region",
            },
        ),
        migrations.CreateModel(
            name="TypeMarche",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "type_marche",
            },
        ),
        migrations.CreateModel(
            name="Marche",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("objet", models.CharField(max_length=512, unique=True)),
                ("prix", models.FloatField(blank=True, null=True)),
                ("groupement", models.TextField(blank=True, null=True)),
                ("date_limite", models.DateTimeField(blank=True, null=True)),
                (
                    "acheteur",
                    models.ForeignKey(
                        db_column="id_acheteur",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="acheteur_marche",
                        to="appelsoffres.acheteur",
                    ),
                ),
                (
                    "code_cpv",
                    models.ForeignKey(
                        db_column="id_code_cpv",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="code_cpv_marche",
                        to="appelsoffres.codecpv",
                    ),
                ),
                (
                    "competences",
                    models.ManyToManyField(related_name="marches", to="appelsoffres.competence"),
                ),
                (
                    "departements",
                    models.ManyToManyField(related_name="marches", to="appelsoffres.departement"),
                ),
                (
                    "pieces",
                    models.ManyToManyField(related_name="marches", to="appelsoffres.piece"),
                ),
                (
                    "procedure",
                    models.ForeignKey(
                        db_column="id_procedure",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="marches",
                        to="appelsoffres.procedure",
                    ),
                ),
                (
                    "types",
                    models.ManyToManyField(related_name="marches", to="appelsoffres.typemarche"),
                ),
            ],
            options={
                "db_table": "marche",
            },
        ),
        migrations.AddField(
            model_name="departement",
            name="region",
            field=models.ForeignKey(
                blank=True,
                db_column="id_region",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="departements",
                to="appelsoffres.region",
            ),
        ),
    ]
